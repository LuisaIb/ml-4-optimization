grid_elements <- round(pracma::nthroot(n, dim))
sequenes <- NULL
for (i in 1:dim) {
sequenes <- cbind(x, seq(lower[i], upper[i], length.out=grid_elements))
}
sequences
}
generateGrid(50, c(-5, -5), c(5, 5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
sequenes <- NULL
for (i in 1:dim) {
sequenes <- cbind(x, seq(lower[i], upper[i], length.out=grid_elements))
}
sequences
}
generateGrid(50, c(-5,-5), c(5,5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
sequenes <- NULL
for (i in 1:dim) {
sequenes <- cbind(x, seq(lower[i], upper[i], length.out=grid_elements))
}
sequences
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
sequenes <- NULL
for (i in 1:dim) {
sequenes <- cbind(x, seq(lower[i], upper[i], length.out=grid_elements))
}
print(test)
sequences
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
sequenes <- NULL
for (i in 1:dim) {
sequenes <- cbind(x, seq(lower[i], upper[i], length.out=grid_elements))
}
print("test")
sequences
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
print("test1")
grid_elements <- round(pracma::nthroot(n, dim))
print("test2")
sequenes <- NULL
print("test3")
for (i in 1:dim) {
print("test4")
sequenes <- cbind(x, seq(lower[i], upper[i], length.out=grid_elements))
print("test5")
}
print("test6")
sequences
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
print("test1")
grid_elements <- round(pracma::nthroot(n, dim))
print("test2")
sequenes <- NULL
print("test3")
for (i in 1:dim) {
print("test4")
sequenes <- cbind(sequences, seq(lower[i], upper[i], length.out=grid_elements))
print("test5")
}
print("test6")
sequences
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
print("test1")
grid_elements <- round(pracma::nthroot(n, dim))
print("test2")
sequenes <- NULL
print("test3")
for (i in 1:dim) {
print("test4")
sequenes <- cbind(sequenes, seq(lower[i], upper[i], length.out=grid_elements))
print("test5")
}
print("test6")
sequences
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
print("test1")
grid_elements <- round(pracma::nthroot(n, dim))
print("test2")
seqs <- NULL
print("test3")
for (i in 1:dim) {
print("test4")
seqs <- cbind(seqs, seq(lower[i], upper[i], length.out=grid_elements))
print("test5")
}
print("test6")
seqs
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seqs <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
}
seqs <- cbind(seqs, row)
}
seqs
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seqs <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
print(row)
}
seqs <- cbind(seqs, row)
}
seqs
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seqs <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
print(row)
}
seqs <- cbind(seqs, row)
}
#seqs
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seqs <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
print(row)
}
#seqs <- cbind(seqs, row)
}
#seqs
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
print(row)
}
seq <- cbind(seqs, row)
print(seq)
}
#seqs
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
print(row)
}
seq <- cbind(seq, row)
print(seq)
}
#seqs
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
print(seq)
}
#seqs
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
print(seq)
}
#seqs
}
generateGrid(50, c(-5), c(5), dim =1)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
print(seq)
}
#seqs
}
generateGrid(50, c(-5,-5), c(5,5))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
print(seq)
}
#seqs
}
as.data.frame(generateGrid(50, c(-5,-5), c(5,5)))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
print(seq)
}
seqs
}
as.data.frame(generateGrid(50, c(-5,-5), c(5,5)))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
print(seq)
}
seq
}
as.data.frame(generateGrid(50, c(-5,-5), c(5,5)))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- cbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
print(seq)
}
seq
}
as.data.frame(generateGrid(50, c(-5,-5), c(5,5)))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
}
seq
}
as.data.frame(generateGrid(50, c(-5,-5), c(5,5)))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
}
seq
}
as.data.frame(generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=3))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
row <- NULL
for(j in 1:dim){
row <- rbind(row, seq(lower[i], upper[i], length.out=grid_elements))
#print(row)
}
seq <- cbind(seq, row)
}
seq
}
as.data.frame(generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq
}
as.data.frame(generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq
}
as.data.frame(generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2))
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq[1]
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq[0]
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq[1]
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq[,]
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq[,1]
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
seq
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
data <- expand.grid(x = seq[,1], y = seq[,2])
data
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2)
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
if(dim == 2){
data <- expand.grid(x1 = seq[,1], x2 = seq[,2])
} else if(dim == 3){
data <- expand.grid(x1 = seq[,1], x2 = seq[,2], x1 = seq[,3])
} else if(dim == 4){
data <- expand.grid(x1 = seq[,1], x2 = seq[,2], x1 = seq[,3], x1 = seq[,4])
}
data
}
generateGrid(50, c(-5,-5,-5), c(5,5,5), dim=2)
generateRandom <- function(n = 50, lower, upper, dim = 2){
x <- runif(n,lower[1],upper[1])
for (i in 2:dim) {
x <- cbind(x, runif(n,lower[i],upper[i]))
}
x
}
generateGrid <- function(n = 50, lower, upper, dim = 2){
grid_elements <- round(pracma::nthroot(n, dim))
seq <- NULL
for (i in 1:dim) {
seq <- cbind(seq, seq(lower[i], upper[i], length.out=grid_elements))
}
if(dim == 2){
data <- expand.grid(x1 = seq[,1], x2 = seq[,2])
} else if(dim == 3){
data <- expand.grid(x1 = seq[,1], x2 = seq[,2], x1 = seq[,3])
} else if(dim == 4){
data <- expand.grid(x1 = seq[,1], x2 = seq[,2], x1 = seq[,3], x1 = seq[,4])
}
data
}
generateLHS <- function(n = 50, lower, upper, dim = 2){
x <- randomLHS(n, dim)
for(i in 1:dim){
x[,i] <- lower + (upper-lower)*x[,i]
}
x
}
generateDataPoints <- function(n = 50, f, dim = 2, method = "random"){
ftest <- f
lower <- getLowerBoxConstraints(ftest)
upper <- getUpperBoxConstraints(ftest)
if (method == "random") {
x <- generateRandom(n = n, lower = lower, upper = upper, dim = dim)
} else if (method == "grid") {
x <- generateGrid(n = n, lower = lower, upper = upper, dim = dim)
} else if (method == "lhs") {
x <- generateLHS(n = n, lower = lower, upper = upper, dim = dim)
} else {
stop("wrong method - please choose 'random' or 'lhs'")
}
df <-  data.frame(x)
df$z <- apply(df,1,ftest)
return(df)
}
plot2DDataPoints <- function(df){
dfPlot <- data.frame(x=df[, 1],y=df[, 2],z=df[, 3])
ggplot(data=dfPlot,aes(x=x,y=y,colour=z)) +
geom_point() +
scale_colour_gradientn(colours=rainbow(4))
}
df <- generateDataPoints(n = 150, f1, dim = 2, method = "random")
plot2DDataPoints(df)
df <- generateDataPoints(n = 150, f1, dim = 2, method = "grid")
plot2DDataPoints(df)
df <- generateDataPoints(n = 150, f1, dim = 2, method = "lhs")
plot2DDataPoints(df)

knitr::opts_chunk$set(echo = TRUE)
require(smoof)
require(ggplot2)
loadFunction <- function(num) {
f <- makeBBOBFunction(2,num,1)
return(f)
}
plotFunction <- function(f){
plotf(f,getLowerBoxConstraints(f),getUpperBoxConstraints(f))
}
f1 <- loadFunction(1)
f2 <- loadFunction(3)
f3 <- loadFunction(23)
f4 <- loadFunction(24)
plotFunction(f1)
loadFunction <- function(num) {
f <- makeBBOBFunction(2,num,1)
return(f)
}
plotFunction <- function(f){
plot(f,getLowerBoxConstraints(f),getUpperBoxConstraints(f))
}
f1 <- loadFunction(1)
f2 <- loadFunction(3)
f3 <- loadFunction(23)
f4 <- loadFunction(24)
plotFunction(f1)
knitr::opts_chunk$set(echo = FALSE)
set.seed(1)
plotf <- function(f,lower,upper,vectorized=FALSE){
x <- seq(from=lower[1],to=upper[1],length.out=100)
y <- seq(from=lower[2],to=upper[2],length.out=100)
df <-  expand.grid(x = x, y = y)
if(vectorized)
z <- f(df)
else
z <- apply(df,1,f)
#z <- log10(z-min(z)+1)
df$z <- z
p <- ggplot(df, aes(x, y, z=z))
p <- p + geom_contour_filled()
#p <- p + geom_raster(aes(fill=z))
#p <- p + scale_fill_gradientn(values=c(min(z), median(z), max(z)), colours=c("red","white","blue"))
p
}
knitr::opts_chunk$set(echo = TRUE)
require(smoof)
require(ggplot2)
set.seed(1)
plotf <- function(f,lower,upper,vectorized=FALSE){
x <- seq(from=lower[1],to=upper[1],length.out=100)
y <- seq(from=lower[2],to=upper[2],length.out=100)
df <-  expand.grid(x = x, y = y)
if(vectorized)
z <- f(df)
else
z <- apply(df,1,f)
#z <- log10(z-min(z)+1)
df$z <- z
p <- ggplot(df, aes(x, y, z=z))
p <- p + geom_contour_filled()
#p <- p + geom_raster(aes(fill=z))
#p <- p + scale_fill_gradientn(values=c(min(z), median(z), max(z)), colours=c("red","white","blue"))
p
}
loadFunction <- function(num) {
f <- makeBBOBFunction(2,num,1)
return(f)
}
plotFunction <- function(f){
plot(f,getLowerBoxConstraints(f),getUpperBoxConstraints(f))
}
f1 <- loadFunction(1)
f2 <- loadFunction(3)
f3 <- loadFunction(23)
f4 <- loadFunction(24)
plotFunction(f1)
require(smoof)
require(ggplot2)
f1 <- makeBBOBFunction(2,1,1)
plotf(f1,getLowerBoxConstraints(f1),getUpperBoxConstraints(f1))
f2 <- makeBBOBFunction(2,3,1)
plotf(f2,getLowerBoxConstraints(f2),getUpperBoxConstraints(f2))
f3 <- makeBBOBFunction(2,23,1)
plotf(f3,getLowerBoxConstraints(f3),getUpperBoxConstraints(f3))
f4 <- makeBBOBFunction(2,24,1)
plotf(f4,getLowerBoxConstraints(f4),getUpperBoxConstraints(f4))
set.seed(1)
plotf <- function(f,lower,upper,vectorized=FALSE){
x <- seq(from=lower[1],to=upper[1],length.out=100)
y <- seq(from=lower[2],to=upper[2],length.out=100)
df <-  expand.grid(x = x, y = y)
if(vectorized)
z <- f(df)
else
z <- apply(df,1,f)
#z <- log10(z-min(z)+1)
df$z <- z
p <- ggplot(df, aes(x, y, z=z))
p <- p + geom_contour_filled()
#p <- p + geom_raster(aes(fill=z))
#p <- p + scale_fill_gradientn(values=c(min(z), median(z), max(z)), colours=c("red","white","blue"))
p
}
loadFunction <- function(num) {
f <- makeBBOBFunction(2,num,1)
return(f)
}
plotFunction <- function(f){
plot(f,getLowerBoxConstraints(f),getUpperBoxConstraints(f))
}
f1 <- makeBBOBFunction(2,1,1)
plotf(f1,getLowerBoxConstraints(f1),getUpperBoxConstraints(f1))
f2 <- makeBBOBFunction(2,3,1)
plotf(f2,getLowerBoxConstraints(f2),getUpperBoxConstraints(f2))
f3 <- makeBBOBFunction(2,23,1)
plotf(f3,getLowerBoxConstraints(f3),getUpperBoxConstraints(f3))
f4 <- makeBBOBFunction(2,24,1)
plotf(f4,getLowerBoxConstraints(f4),getUpperBoxConstraints(f4))
f1 <- loadFunction(1)
f2 <- loadFunction(3)
f3 <- loadFunction(23)
f4 <- loadFunction(24)
plotFunction(f1)
set.seed(1)
plotf <- function(f,lower,upper,vectorized=FALSE){
x <- seq(from=lower[1],to=upper[1],length.out=100)
y <- seq(from=lower[2],to=upper[2],length.out=100)
df <-  expand.grid(x = x, y = y)
if(vectorized)
z <- f(df)
else
z <- apply(df,1,f)
#z <- log10(z-min(z)+1)
df$z <- z
p <- ggplot(df, aes(x, y, z=z))
p <- p + geom_contour_filled()
#p <- p + geom_raster(aes(fill=z))
#p <- p + scale_fill_gradientn(values=c(min(z), median(z), max(z)), colours=c("red","white","blue"))
p
}
loadFunction <- function(num) {
f <- makeBBOBFunction(2,num,1)
return(f)
}
plotFunction <- function(f){
plotf(f,getLowerBoxConstraints(f),getUpperBoxConstraints(f))
}
f1 <- loadFunction(1)
f2 <- loadFunction(3)
f3 <- loadFunction(23)
f4 <- loadFunction(24)
plotFunction(f1)
plotFunction(f2)
plotFunction(f3)
plotFunction(f4)
generateDataPoints <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
x
}
generateDataPoints()
generateDataPoints <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
x1 <- generateDataPoints()
x1
generateDataPoints <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
x1 <- generateDataPoints()
x1
generateDataPoints <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
x1 <- generateDataPoints()
x1
generateDataPoints <- function(n = 50, lower = c(-5, -5), upper = c(5, 5), f){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
y <- f(x)
return(x, y)
}
x1, y1 <- generateDataPoints()
generateDataPoints <- function(n = 50, lower = c(-5, -5), upper = c(5, 5), f){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
y <- f(x)
return(x, y)
}
data <- generateDataPoints()
generateDataPoints <- function(n = 50, lower = c(-5, -5), upper = c(5, 5), f){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
y <- f(x)
return(x, y)
}
data <- generateDataPoints(f1)
generateDataPoints <- function(n = 50, lower = c(-5, -5), upper = c(5, 5), f){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
y <- f(x)
return(x, y)
}
data <- generateDataPoints(f = f1)
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
x1 <- generateDataPointsX()
y1 < generateDataPointsY(x, f1)
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
x1 <- generateDataPointsX()
y1 < generateDataPointsY(x1, f1)
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
x1 <- generateDataPointsX()
y1 <- generateDataPointsY(x1, f1)
x1
y1
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
x1 <- generateDataPointsX()
y1 <- generateDataPointsY(x1, f1)
y1
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
x1 <- generateDataPointsX()
y1 <- generateDataPointsY(x1, f1)
y1
y2 <- f1(x1)
y2
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
x1 <- generateDataPointsX()
y1 <- generateDataPointsY(x1, f1)
x1
y1
df <- data.frame(x=x,y=y)
df <- data.frame(x=x,y=y)
df <- data.frame(x=x1,y=y1)
require(ggplot2)
require(viridis)
ggplot(data=df,aes(x=x.1,y=x.2,colour=y)) +
geom_point() +
scale_colour_viridis(option="A")
df <- data.frame(x=x1,y=y1)
require(ggplot2)
ggplot(data=df,aes(x=x.1,y=x.2,colour=y)) +
geom_point()
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
plotDataPoints <- function(x, y){
df <- data.frame(x=x1,y=y1)
ggplot(data=df,aes(x=x.1,y=x.2,colour=y)) +
geom_point()
}
x1 <- generateDataPointsX()
y1 <- generateDataPointsY(x1, f1)
plotDataPoints(x1, y1)
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
plotDataPoints <- function(x, y){
df <- data.frame(x=x1,y=y1)
ggplot(data=df,aes(x=x.1,y=x.2,colour=y)) +
geom_point()
}
x1 <- generateDataPointsX(lower = getLowerBoxConstraints(f1), upper = getUpperBoxConstraints(f1))
y1 <- generateDataPointsY(x1, f1)
plotDataPoints(x1, y1)
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
plotDataPoints <- function(x, y){
df <- data.frame(x=x1,y=y1)
ggplot(data=df,aes(x=x.1,y=x.2,colour=y)) +
geom_point()
}
x1 <- generateDataPointsX(lower = getLowerBoxConstraints(f1), upper = getUpperBoxConstraints(f1))
y1 <- generateDataPointsY(x1, f1)
plotDataPoints(x1, y1)
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
plotDataPoints <- function(x, y){
df <- data.frame(x=x1,y=y1)
ggplot(data=df,aes(x=x.1,y=x.2,colour=y)) +
geom_point()
}
x1 <- generateDataPointsX(lower = getLowerBoxConstraints(f2), upper = getUpperBoxConstraints(f2))
y1 <- generateDataPointsY(x1, f2)
plotDataPoints(x1, y1)
generateDataPointsX <- function(n = 50, lower = c(-5, -5), upper = c(5, 5)){
x <- cbind(runif(n,lower[1],upper[1]),runif(n,lower[2],upper[2]))
return(x)
}
generateDataPointsY <- function(x, f){
y <- f(x)
return(y)
}
plotDataPoints <- function(x, y){
df <- data.frame(x=x1,y=y1)
ggplot(data=df,aes(x=x.1,y=x.2,colour=y)) +
geom_point()
}
x1 <- generateDataPointsX(lower = getLowerBoxConstraints(f1), upper = getUpperBoxConstraints(f1))
y1 <- generateDataPointsY(x1, f1)
plotDataPoints(x1, y1)
